#!/bin/bash
# -*- bash -*-

#set -x
#set -u

: << =cut

=head1 NAME

go_echarger_power - Plugin to monitor go-eCharger status

=head1 CONFIGURATION

You just need to set the host like this:

 [go-echarger-*]
 env.host go-echarger.home.well-adjusted.de

=head1 AUTHORS

=over

=item 2021.05.02 Initial version by Jochen Spieker <js@wim.re>

=back

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

host=${host:-go-echarger}

get_status() {
	curl -s http://${host}/mqtt
}

get_info() {
	get_status | jq ".${1} | tonumber"
}


case $1 in
	config)
        cat <<EOF
graph_title go-eCharger State
graph_args --lower-limit 0
graph_info go-eCharger States<br /> \
<em>car</em> 1=ready, no car; 2=Charging; 3=Waiting for car; 4=Charging finished, car still connected <br /> \
<em>err</em> 1=RCCB; 3=PHASE; 8: NO_GROUND; 10=INTERNAL<br /> \
<em>ast</em> 0=Open; 1=Locked; 2=Automatic <br /> \
<em>alw</em> 0=Charging not allowed; 1=Charging allowed <br /> \
<em>adi</em> 0=No adapter; 1=16A adapter presend <br /> \
<em>wst</em> 3=Wifi connected <br /> \
<em>wen</em> 0=Wifi disabled; 1=Wifi enabled <br /> \
<em>lse</em> 0=LED energy saving disabled; 1=LED energy saving enabled <br /> \
<em>ust</em> 0=Cable locked while connected; 1=Unlock after charging; 2=Always locked <br /> \
<em>nmo</em> 0=Norway mode disabled; 1=Norway mode enabled (grounding detection disabled)<br /> \
<em>loe</em> 0=Capacity management disabled; 1=Capacity management enabled <br /> \
<em>mce</em> 0=Custom MQTT server disabled; 1=Custom MQTT server enabled <br /> \
<em>mcc</em> 0=Custom MQTT server not connected; 1=Custom MQTT server connected <br />
graph_category go_eCharger
graph_printf %0.1lf
graph_data_size custom 7d, 30m for 30d, 2h for 365d, 1d for 3650d
EOF

		for state in car err ast alw adi wst wen lse ust nmo loe mce mcc; do
			echo "${state}.label ${state}"
		done

        exit 0
		;;
	autoconf)
		if echo "" | nc -q1 "$host" "80" > /dev/null 2>&1 ; then
			echo "yes"
		else
			echo "no (Connection to ${host}:80 failed.)"
		fi
		exit 0
		;;
esac 

for state in car err ast alw adi wst wen lse ust nmo loe mce mcc; do
	echo "${state}.value $(get_info ${state})"
done


exit 0
