#!/bin/bash
# -*- bash -*-

#set -x
#set -u

: << =cut

=head1 NAME

go_echarger_power - Plugin to monitor power in Watts

=head1 CONFIGURATION

You just need to set the host like this:

 [go_echarger_*]
 env.host go-echarger.home.well-adjusted.de

=head1 AUTHORS

=over

=item 2021.04.30 Initial version by Jochen Spieker <js@wim.re>

=back

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=contrib
 #%# capabilities=autoconf

=cut

host=${host:-go-echarger}

get_status() {
	curl -s http://${host}/mqtt
}

power_format() {
	printf "%.1f" $(echo "$1 / 10" | bc -l)
}

total_power_format() {
	printf "%.1f" $(echo "$1 / 100" | bc -l)
}

get_line_power() {
	# $1 must be 1, 2, 3
	line=$1
	if [ "${line}" -lt 1 ] || [ "${line}" -gt 4 ]; then
		exit
	fi
	idx=$(echo "$line + 6" | bc)
	power_format $(get_status | jq ".nrg[${idx}]")
}

get_total_power() {
	total_power_format $(get_status | jq ".nrg[11]")
}

case $1 in
	config)
        cat <<EOF
graph_title go-eCharger Power
graph_vlabel kW
graph_args --lower-limit 0
graph_info go-eCharger Power
graph_category go_eCharger
graph_printf %0.1lf
graph_data_size custom 7d, 30m for 30d, 2h for 365d, 1d for 3650d
EOF

		echo "line1.label Line 1"
		echo "line1.draw AREA"
		echo "line2.label Line 2"
		echo "line2.draw AREA"
		echo "line3.label Line 3"
		echo "line3.draw AREA"
		echo "neutral.label Neutral"
		echo "line_total.label Total"

        exit 0
		;;
	autoconf)
		if ! jq --version > /dev/null; then
			echo "no ('jq' not found. Is it installed and in PATH?)"
		elif ! echo "" | nc -q1 "$host" "80" > /dev/null 2>&1 ; then
			echo "no (Connection to ${host}:80 failed.)"
		else
			echo "yes"
		fi
		exit 0
		;;
esac 

echo "line1.value $(get_line_power 1)"
echo "line2.value $(get_line_power 2)"
echo "line3.value $(get_line_power 3)"
echo "neutral.value $(get_line_power 4)"
echo "line_total.value $(get_total_power)"

exit 0
